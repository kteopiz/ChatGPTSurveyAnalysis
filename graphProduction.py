# Names: Kyle Teopiz, Alan Pangnathip, Joseph Carvalho, Hameez Iqbal
# Date: Wednesday, March 1, 2023

import csv
import matplotlib.pyplot as plt
import numpy as np
from collections import Counter

QUESTION_ACCESSOR = {
    "age_range" : 1,
    "gender" : 2,
    "academia_status": 3,
    "location": 4,
    "political_spectrum": 5,
    "religion": 6,
    "heard_of_chatGPT": 7,
    "have_used_chatGPT": 8,
    "plagiarism_for_essays_prompt": 9,
    "cuse_for_research_prompt": 10,
    "use_in_workplace_prompt": 11,
    "effect_on_student_learning": 12,
    "instructor_use": 13,
    "personal_use": 14
}


def far_leftist_religions_bar_graph():
    """

    Figure 1: A pie graph representing the diverse religions within the Far Leftist respondents group (optional data about the far lefts)

    """

    religious_group_counter = Counter()
    religions = []
    num_followers = []

    with open('chatGPT_ethics_survey_responses.csv', newline='') as csv_file:
        data_accessor = list(csv.reader(csv_file))[1:]
        for row in data_accessor:
            if int(row[(QUESTION_ACCESSOR["political_spectrum"])]) == 1:
                religious_group_counter[row[QUESTION_ACCESSOR["religion"]]] += 1
        
        for item in religious_group_counter.most_common():
            religions.append(item[0])
            num_followers.append(item[1])

    plt.bar(religions, num_followers)
    plt.xlabel("Religions")
    plt.ylabel("Number of Followers")
    plt.title("Religious Groups of the Far Leftist Repondents")

    plt.show()

    return "Display Closed"

def far_leftist_awareness_of_chatgpt():
    """
    
    Figure: A pie graph displaying the prior awareness of the Far Leftist respondent group of the existence of ChatGPT 
    
    """

    yes_no_counter = Counter()
    yes_no_labels = []
    yes_no_results = []

    with open('chatGPT_ethics_survey_responses.csv', newline='') as csv_file:
        data_accessor = list(csv.reader(csv_file))[1:]

        for row in data_accessor:
            if int(row[QUESTION_ACCESSOR["political_spectrum"]]) == 1:
                yes_no_counter[row[QUESTION_ACCESSOR["heard_of_chatGPT"]]] += 1
        
        for item in yes_no_counter.most_common():
            yes_no_labels.append(item[0])
            yes_no_results.append(item[1])
    
    def convert_autopct_value(percentage):

        """
        
        Helper function which changes the percentage generated by matplotlib to a whole number value to be displayed on the figure
        
        """
        whole_number_value = np.round(percentage/100.*np.array(yes_no_results).sum(),0)

        return whole_number_value

    explode = (0, 0.2)
    fig, ax = plt.subplots()
    ax.pie(yes_no_results, explode=explode, labels=yes_no_labels, autopct=convert_autopct_value, shadow= True)
    plt.title("Far Leftist Respondent Gtroup's Knowledge of ChatGPT Existence prior to Survey")
    plt.axis('equal')
    plt.show()

    return "Display Closed"
        



   



        





def political_chatGPT_plagiarism():
    pass

def political_chatGPT_research():
    pass

def gender_chatGPT_commercial_use():
    pass

def undergraduate_instant_gratification_study():
    pass












